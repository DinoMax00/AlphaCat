/*****************************************************************//**
 * @file   evaluate.h
 * @brief  估值函数头文件
 * 
 * @author AlphaCat
 * @date   March 2021
 *********************************************************************/
#ifndef EVALUATE_H
#define EVALUATE_H

#include "board.h" 
#include "move.h"

/*
 * 静态估值 val = 子力 + 位置分 + 灵活性
 * 动态估值 val = 攻击分值 + 将帅安全性 + 棋子配合
*/

namespace evaluate {

	/**
	 * @brief 对整个棋盘的棋力进行评估
	 * 
	 * @param gameBoard 棋盘引用
	 */
	void updBoardValue(Board& gameBoard);

	/**
	 * @brief 对棋盘的一次走子进行估值更新
	 * 应当在棋子实际更新前调用该函数
	 * 
	 * @param gameBoard 棋盘引用
	 * @param move 走子
	 */
	void updMovValue(Board& gameBoard, Move& move);

	/**
	 * @brief 对棋盘的一次走子撤回进行估值更新
	 * 应当在棋子实际更新前调用该函数
	 * 
	 * @param gameBoard 棋盘引用
	 * @param move 走子
	 */
	void deleteMovValue(Board& gameBoard, Move& mov);
	
	/// 基础子力
	static const int valChessBase[9] = { 0, 600, 270, 120, 125, 10000, 285, 20 };

	/// 灵活度分值
	static const int valChessMove[9] = {0, 6, 12, 1, 1, 0, 6, 15};

	/// 子力位置价值表
	static const int valChessPos[8][256] = {
		{//空
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
	},{//车
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0, 14, 14, 12, 18, 16, 18, 12, 14, 14,  0,  0,  0,
		0,  0,  0,  0, 16, 20, 18, 24, 26, 24, 18, 20, 16,  0,  0,  0,
		0,  0,  0,  0, 12, 12, 12, 18, 18, 18, 12, 12, 12,  0,  0,  0,
		0,  0,  0,  0, 12, 18, 16, 22, 22, 22, 16, 18, 12,  0,  0,  0,
		0,  0,  0,  0, 12, 14, 12, 18, 18, 18, 12, 14, 12,  0,  0,  0,
		0,  0,  0,  0, 12, 16, 14, 20, 20, 20, 14, 16, 12,  0,  0,  0,
		0,  0,  0,  0,  6, 10,  8, 14, 14, 14,  8, 10,  6,  0,  0,  0,
		0,  0,  0,  0,  4,  8,  6, 14, 12, 14,  6,  8,  4,  0,  0,  0,
		0,  0,  0,  0,  8,  4,  8, 16,  8, 16,  8,  4,  8,  0,  0,  0,
		0,  0,  0,  0, -2, 10,  6, 14, 12, 14,  6, 10, -2,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
	},{//马
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  4,  8, 16, 12,  4, 12, 16,  8,  4,  0,  0,  0,
		0,  0,  0,  0,  4, 10, 28, 16,  8, 16, 28, 10,  4,  0,  0,  0,
		0,  0,  0,  0, 12, 14, 16, 20, 18, 20, 16, 14, 12,  0,  0,  0,
		0,  0,  0,  0,  8, 24, 18, 24, 20, 24, 18, 24,  8,  0,  0,  0,
		0,  0,  0,  0,  6, 16, 14, 18, 16, 18, 14, 16,  6,  0,  0,  0,
		0,  0,  0,  0,  4, 12, 16, 14, 12, 14, 16, 12,  4,  0,  0,  0,
		0,  0,  0,  0,  2,  6,  8,  6, 10,  6,  8,  6,  2,  0,  0,  0,
		0,  0,  0,  0,  4,  2, 15,  8,  4, 15,  8,  2,  4,  0,  0,  0,
		0,  0,  0,  0,  0,  2,  4,  4, -2,  4,  4,  2,  0,  0,  0,  0,
		0,  0,  0,  0,  0, -4,  0,  0,  0,  0,  0, -4,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
	},{//相(象)
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0, 13,  0,  0,  0, 13,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0, 15,  0,  0,  0, 25,  0,  0,  0, 15,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0, 20,  0,  0,  0, 20,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
	},{//仕(士)
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0, 15,  0, 15,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0, 23,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0, 20,  0, 20,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
	},{
		//帅(将)
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,-10,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  5, 10,  5,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0, 15, 20, 15,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		},{//炮
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  6,  4,  0,-10,-12,-10,  0,  4,  6,  0,  0,  0,
			0,  0,  0,  0,  2,  2,  0, -4,-14, -4,  0,  2,  2,  0,  0,  0,
			0,  0,  0,  0,  2,  2,  0,-10, -8,-10,  0,  2,  2,  0,  0,  0,
			0,  0,  0,  0,  0,  0, -2,  4, 25,  4, -2,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  2, 15,  2,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0, -2,  0,  4,  2, 30,  2,  4,  0, -2,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  2,  4,  2,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  4,  0,  8,  6, 15,  6,  8,  0,  4,  0,  0,  0,
			0,  0,  0,  0,  0,  2,  4,  6,  6,  6,  4,  2,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  2,  6,  6,  6,  2,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		},{//兵(卒)
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  3,  6,  9, 12,  9,  6,  3,  0,  0,  0,  0,
			0,  0,  0,  0, 18, 36, 56, 80,120, 80, 56, 36, 18,  0,  0,
			0,  0,  0,  0, 14, 26, 42, 60, 80, 60, 42, 26, 14,  0,  0,  0,
			0,  0,  0,  0, 10, 20, 30, 34, 40, 34, 30, 20, 10,  0,  0,  0,
			0,  0,  0,  0,  6, 12, 18, 18, 20, 18, 18, 12,  6,  0,  0,  0,
			0,  0,  0,  0,  2,  0,  8,  0,  8,  0,  8,  0,  2,  0,  0,  0,
			0,  0,  0,  0,  0,  0, -2,  0,  4,  0, -2,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
			0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
		}
	};
}

#endif 